{"version":3,"sources":["../../server/routes/auth.js"],"names":["authRouter","express","Router","post","validateUserSignup","req","res","returnedData","token","status","send","data","userId","isAdmin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,EAAnB;;AAEAF,WAAWG,IAAX,CAAgB,SAAhB,EAA2BC,8BAA3B,EAA+C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MACnDC,YADmD,GAC3BF,GAD2B,CACnDE,YADmD;AAAA,MACrCC,KADqC,GAC3BH,GAD2B,CACrCG,KADqC;;AAE3DF,MAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ,GADW;AAEnBE,UAAM;AACJC,cAAQL,aAAaK,MADjB;AAEJC,eAASN,aAAaM,OAFlB;AAGJL;AAHI;AAFa,GAArB;AAQD,CAVD;;kBAYeR,U","file":"auth.js","sourcesContent":["import express from 'express';\nimport { validateUserSignup } from '../helpers/validators';\n\nconst authRouter = express.Router();\n\nauthRouter.post('/signup', validateUserSignup, (req, res) => {\n  const { returnedData, token } = req;\n  res.status(201).send({\n    status: 201,\n    data: {\n      userId: returnedData.userId,\n      isAdmin: returnedData.isAdmin,\n      token,\n    },\n  });\n});\n\nexport default authRouter;\n"]}
{"version":3,"sources":["../../server/helpers/validators.js"],"names":["dotenv","config","isPositiveInteger","test","s","filterInput","input","pattern","result","isDateFormat","isTime","atAdminMail","match","trimAllSpace","str","replace","validateUserSignup","req","res","next","body","email","firstName","lastName","password","trimFirstName","trimLastName","trimEmail","validator","isEmail","length","payload","token","jwt","sign","process","env","SECRET_KEY","returnedData","then","hashedPassword","bcrypt","genSalt","err","salt","hash","data","userId","user_id","isAdmin","is_admin","catch","feedback","validateUserSignIn","compare","first_name","last_name","user_email","createTripValidate","busId","origin","destination","tripDate","tripTime","fare","convertBusId","parseInt","trimOrigin","trimDestination","trimDate","trimTime","trimFare","parseFloat","isNaN","tripDetails","bookingValidate","tripId","seatNumber","convertTripId","intSeatNumber","bookingInfo","date","Date","verifyToken","bearerHeader","get","splitBearerHeader","split","verify","decrypt","decrypted","userDetails"],"mappings":"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","file":"validators.js","sourcesContent":["import validator from 'validator';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcryptjs';\nimport dotenv from 'dotenv';\nimport sendResponse from './response';\nimport { getUserEmail, insertUsers, bookingCheck } from '../crud/db';\n\n\ndotenv.config();\n\nconst isPositiveInteger = s => /^\\+?[0-9][\\d]*$/.test(s);\n\nconst filterInput = (input) => {\n  const pattern = /[~!#$%^&*()+={}:'\"<>?;',]/;\n  const result = pattern.test(input);\n  return result;\n};\n\nconst isDateFormat = s => /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(s);\n\nconst isTime = s => /^\\d{1,2}\\:\\d{2}$/.test(s);\n\nconst atAdminMail = (input) => {\n  const result = input.match(/(\\b@wayfareradmin.com\\b)(?!.*\\b\\1\\b)/g);\n  if (result === null) {\n    return false;\n  }\n  return true;\n};\n\nconst trimAllSpace = str => str.replace(/\\s+/g, '');\n\nconst validateUserSignup = (req, res, next) => {\n  const {\n    email,\n    firstName,\n    lastName,\n    password,\n  } = req.body;\n  if (typeof email === 'undefined' || typeof firstName === 'undefined' || typeof lastName === 'undefined'\n  || typeof password === 'undefined') {\n    sendResponse(res, 400, null, 'Ensure that all fields are correctly filled out');\n  } else {\n    const trimFirstName = trimAllSpace(firstName);\n    const trimLastName = trimAllSpace(lastName);\n    const trimEmail = trimAllSpace(email);\n    if (validator.isEmail(email) && !filterInput(trimFirstName) && trimFirstName.length > 2\n      && !filterInput(trimLastName) && trimLastName.length > 2\n      && !filterInput(trimEmail) && password.length > 5) {\n      const payload = {\n        firstName,\n        lastName,\n        email,\n      };\n      const token = jwt.sign(payload, process.env.SECRET_KEY);\n      const returnedData = {};\n      req.token = token;\n      getUserEmail(email)\n        .then((result) => {\n          if (result.length > 0) {\n            sendResponse(res, 401, null, 'User already signed up');\n          } else {\n            const hashedPassword = bcrypt.genSalt(10, (err, salt) => {\n              bcrypt.hash(password, salt, (err, hash) => {\n                if (atAdminMail(email)) {\n                  insertUsers(firstName, lastName, email, hash, true)\n                    .then(() => {\n                      getUserEmail(email)\n                        .then((data) => {\n                          returnedData.userId = data[0].user_id;\n                          returnedData.isAdmin = data[0].is_admin;\n                          req.returnedData = returnedData;\n                          next();\n                        }).catch(() => {\n                          sendResponse(res, 500, null, 'Internal Server Error');\n                        });\n                    }).catch(() => {\n                      sendResponse(res, 500, null, 'Internal Server Error');\n                    });\n                } else {\n                  insertUsers(firstName, lastName, email, hash, false)\n                    .then(() => {\n                      getUserEmail(email)\n                        .then((feedback) => {\n                          returnedData.userId = feedback[0].user_id;\n                          returnedData.isAdmin = feedback[0].is_admin;\n                          req.returnedData = returnedData;\n                          next();\n                        }).catch(() => {\n                          sendResponse(res, 500, null, 'Internal Server Error');\n                        });\n                    }).catch(() => {\n                      sendResponse(res, 500, null, 'Internal Server Error');\n                    });\n                }\n              });\n            });\n          }\n        }).catch(() => {\n          sendResponse(res, 500, null, 'Internal Server Error');\n        });\n    } else {\n      sendResponse(res, 400, null, 'Ensure username, email and password are valid entries');\n    }\n  }\n};\n\nconst validateUserSignIn = (req, res, next) => {\n  const { email, password } = req.body;\n  if (typeof email === 'undefined' || typeof password === 'undefined') {\n    sendResponse(res, 403, null, 'Invalid Input');\n  } else {\n    const trimEmail = trimAllSpace(email);\n    if (validator.isEmail(email) && !filterInput(trimEmail) && password.length > 4) {\n      getUserEmail(email)\n        .then((result) => {\n          bcrypt.compare(password, result[0].password, (err, data) => {\n            if (!data) {\n              sendResponse(res, 406, null, 'Password Incorrect');\n            } else {\n              const payload = {};\n              payload.userId = result[0].user_id;\n              payload.firstName = result[0].first_name;\n              payload.lastName = result[0].last_name;\n              payload.email = result[0].user_email;\n              payload.isAdmin = result[0].is_admin;\n              req.payload = payload;\n              next();\n            }\n          });\n        }).catch(() => {\n          sendResponse(res, 404, null, 'Email not registered');\n        });\n    } else {\n      sendResponse(res, 400, null, 'Ensure email and password are valid entries');\n    }\n  }\n};\n\nconst createTripValidate = (req, res, next) => {\n  const {\n    busId, origin, destination, tripDate, tripTime, fare,\n  } = req.body;\n  if (typeof busId === 'undefined' || typeof origin === 'undefined'\n  || typeof destination === 'undefined' || typeof tripDate === 'undefined'\n  || typeof tripTime === 'undefined' || typeof fare === 'undefined') {\n    sendResponse(res, 403, null, 'Missing input details');\n  } else {\n    const convertBusId = parseInt(busId);\n    const trimOrigin = trimAllSpace(origin);\n    const trimDestination = trimAllSpace(destination);\n    const trimDate = trimAllSpace(tripDate);\n    const trimTime = trimAllSpace(tripTime);\n    const trimFare = parseFloat(fare);\n    if (isPositiveInteger(convertBusId) && !filterInput(trimOrigin)\n   && !filterInput(trimDestination) && isDateFormat(trimDate)\n   && isTime(trimTime) && !isNaN(trimFare)) {\n      const tripDetails = {};\n      tripDetails.busId = convertBusId;\n      tripDetails.origin = trimOrigin;\n      tripDetails.destination = trimDestination;\n      tripDetails.tripDate = trimDate;\n      tripDetails.tripTime = trimTime;\n      tripDetails.fare = trimFare;\n      req.body.tripDetails = tripDetails;\n      next();\n    } else {\n      sendResponse(res, 403, null, 'Ensure all fields are filled in correctly.Date Format:DD/MM/YY.Time Format-hh:mm with a ');\n    }\n  }\n};\n\nconst bookingValidate = (req, res, next) => {\n  const { tripId, seatNumber } = req.body;\n  if (typeof tripId === 'undefined' || typeof seatNumber === 'undefined') {\n    sendResponse(res, 403, null, 'Missing input details');\n  } else {\n    const convertTripId = parseInt(tripId);\n    const intSeatNumber = parseInt(seatNumber);\n    if (isPositiveInteger(convertTripId) && isPositiveInteger(intSeatNumber)\n     && intSeatNumber <= 36) {\n      bookingCheck(convertTripId, intSeatNumber)\n        .then((result) => {\n          if (result.length > 0) {\n            sendResponse(res, 412, null, 'Seat already taken');\n          } else {\n            const bookingInfo = {};\n            const date = new Date();\n            bookingInfo.tripId = convertTripId;\n            bookingInfo.seatNumber = intSeatNumber;\n            bookingInfo.date = date;\n            req.body.bookingInfo = bookingInfo;\n            next();\n          }\n        }).catch(() => {\n          sendResponse(res, 500, null, 'Internal server error');\n        });\n    } else {\n      sendResponse(res, 403, null, 'Ensure all fields are filled in correctly.Maximum number of seats is 36');\n    }\n  }\n};\n\nconst verifyToken = (req, res, next) => {\n  const bearerHeader = req.get('Authorization');\n  if (typeof bearerHeader !== 'undefined') {\n    const splitBearerHeader = bearerHeader.split(' ');\n    const token = splitBearerHeader[1];\n    jwt.verify(token, process.env.SECRET_KEY, (err, data) => {\n      if (err) {\n        sendResponse(res, 407, null, 'authentication failed!');\n      } else {\n        const decrypt = data;\n        req.body.decrypted = decrypt;\n        getUserEmail(req.body.decrypted.email)\n          .then((result) => {\n            req.body.userDetails = result;\n            next();\n          })\n          .catch(() => {\n            sendResponse(res, 403, null, 'Invalid user');\n          });\n      }\n    });\n  } else {\n    sendResponse(res, 407, null, 'Cannot authenticate user');\n  }\n};\n\n\nexport {\n  validateUserSignup, isPositiveInteger,\n  filterInput, atAdminMail, trimAllSpace,\n  validateUserSignIn, createTripValidate, verifyToken, isDateFormat, isTime, bookingValidate,\n};\n"]}
{"version":3,"sources":["../../server/test/trip.test.js"],"names":["describe","before","done","then","catch","e","it","app","post","send","busId","origin","destination","tripDate","tripTime","fare","set","expect","response","body","status","toBe","error","toContain","patch","data","get"],"mappings":"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","file":"trip.test.js","sourcesContent":["import expect from 'expect';\nimport request from 'supertest';\nimport app from '../app';\nimport { clearTripTable, dummyTrip } from '../crud/db';\n\ndescribe('POST /trips, GET /trips', () => {\n  before((done) => {\n    clearTripTable()\n      .then(() => {\n        dummyTrip(1, 1, 'Mangala', 'Seoul', '12/04/2067', '12:30', '100000', true)\n          .then(() => {\n            dummyTrip(2, 1, 'Johannesburg', 'Dakota', '12/04/2067', '12:30', '100000', false)\n              .then(() => {\n                dummyTrip(3, 1, 'New York', 'Paris', '12/04/2067', '12:30', '100000', false)\n                  .then(() => {\n                    done();\n                  }).catch(e => done(e));\n              }).catch(e => done(e));\n          }).catch(e => done(e));\n      })\n      .catch(e => done(e));\n  });\n  // it('should create trip for signed in admin', () => request(app)\n  //   .post('/api/v1/trips')\n  //   .send({\n  //     busId: 4,\n  //     origin: 'Mangala',\n  //     destination: 'Seoul',\n  //     tripDate: '12/07/2019',\n  //     tripTime: '12:30',\n  //     fare: '100000',\n  //   })\n  //   .set('Accept', 'application/json')\n  //   .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n  //   .expect(201)\n  //   .then((response) => {\n  //     expect(response.body.status).toBe(201);\n  //     expect(response.body.data).toContain('trip created');\n  //     expect(response.body.data).toBeTruthy();\n  //   }));\n\n  it('should flag error for wrong input details', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: '4',\n      origin: 'Mangala%^$#',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(403)\n    .then((response) => {\n      expect(response.body.status).toBe(403);\n      expect(response.body.error).toContain('Ensure all fields are filled in correctly');\n    }));\n\n  it('should flag error for missing input details', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(403)\n    .then((response) => {\n      expect(response.body.status).toBe(403);\n      expect(response.body.error).toContain('Missing input details');\n    }));\n\n  it('should ensure non-admin does not create a trip', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjg1LCJmaXJzdE5hbWUiOiJKb3NodWEiLCJsYXN0TmFtZSI6IkZyYW5rc29uIiwiZW1haWwiOiJqb3NodWFmcmFua3NvbkBnbWFpbC5jb20iLCJpc0FkbWluIjpmYWxzZSwiaWF0IjoxNTYyMTg5OTg4fQ.pS7g3oVP_4hVL1ugeJZpr5JoBqDRACZJlS7uG9cFFGw')\n    .expect(401)\n    .then((response) => {\n      expect(response.body.status).toBe(401);\n      expect(response.body.error).toContain('Unauthorized user!');\n    }));\n\n  it('should raise error for wrongly authenticated user', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer w')\n    .expect(407)\n    .then((response) => {\n      expect(response.body.status).toBe(407);\n      expect(response.body.error).toContain('authentication failed!');\n    }));\n\n  it('should raise error for non-authenticated user', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .expect(407)\n    .then((response) => {\n      expect(response.body.status).toBe(407);\n      expect(response.body.error).toContain('Cannot authenticate user');\n    }));\n\n  it('should raise error for invalid bus id', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: '3000000',\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(500)\n    .then((response) => {\n      expect(response.body.status).toBe(500);\n      expect(response.body.error).toContain('Error.Ensure bus id is valid');\n    }));\n\n  it('should raise error for invalid trip date', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: 4,\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/1942',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(405)\n    .then((response) => {\n      expect(response.body.status).toBe(405);\n      expect(response.body.error).toContain('This Date is not allowed');\n    }));\n\n  it('should ensure unauthorized user does not create trip', () => request(app)\n    .post('/api/v1/trips')\n    .send({\n      busId: 4,\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/1942',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjg1LCJmaXJzdE5hbWUiOiJKb3NodWEiLCJsYXN0TmFtZSI6IkZyYW5rc29uIiwiZW1haWwiOiJqb3NodWFmcmFua3NvbkBnbWFpbC5jb20iLCJpc0FkbWluIjpmYWxzZSwiaWF0IjoxNTYyMTg5OTg4fQ.pS7g3oVP_4hVL1ugeJZpr5JoBqDRACZJlS7uG9cFFGw')\n    .expect(401)\n    .then((response) => {\n      expect(response.body.status).toBe(401);\n      expect(response.body.error).toContain('Unauthorized');\n    }));\n\n  it('should raise error for unknown trip', () => request(app)\n    .patch('/api/v1/trips/8')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(404)\n    .then((response) => {\n      expect(response.body.status).toBe(404);\n      expect(response.body.error).toContain('Could not get trip');\n    }));\n\n  it('should cancel trip for admin', () => request(app)\n    .patch('/api/v1/trips/1')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(202)\n    .then((response) => {\n      expect(response.body.status).toBe(202);\n      expect(response.body.data).toContain('Trip cancelled');\n    }));\n\n  it('should raise error for already cancelled trip', () => request(app)\n    .patch('/api/v1/trips/1')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(207)\n    .then((response) => {\n      expect(response.body.status).toBe(207);\n      expect(response.body.data).toContain('Trip already cancelled');\n    }));\n\n  it('should not allow non-admin cancel trip', () => request(app)\n    .patch('/api/v1/trips/1')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjg1LCJmaXJzdE5hbWUiOiJKb3NodWEiLCJsYXN0TmFtZSI6IkZyYW5rc29uIiwiZW1haWwiOiJqb3NodWFmcmFua3NvbkBnbWFpbC5jb20iLCJpc0FkbWluIjpmYWxzZSwiaWF0IjoxNTYyMTg5OTg4fQ.pS7g3oVP_4hVL1ugeJZpr5JoBqDRACZJlS7uG9cFFGw')\n    .expect(401)\n    .then((response) => {\n      expect(response.body.status).toBe(401);\n      expect(response.body.error).toContain('Unauthorized');\n    }));\n\n  it('should get all trips for non-admin', () => request(app)\n    .get('/api/v1/trips')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjg1LCJmaXJzdE5hbWUiOiJKb3NodWEiLCJsYXN0TmFtZSI6IkZyYW5rc29uIiwiZW1haWwiOiJqb3NodWFmcmFua3NvbkBnbWFpbC5jb20iLCJpc0FkbWluIjpmYWxzZSwiaWF0IjoxNTYyMTg5OTg4fQ.pS7g3oVP_4hVL1ugeJZpr5JoBqDRACZJlS7uG9cFFGw')\n    .expect(200)\n    .then((response) => {\n      expect(response.body.status).toBe(200);\n    }));\n\n  it('should get all trips for admin', () => request(app)\n    .get('/api/v1/trips')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(200)\n    .then((response) => {\n      expect(response.body.status).toBe(200);\n    }));\n\n  it('should raise error for unauthorized cases', () => request(app)\n    .get('/api/v1/trips')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(407)\n    .then((response) => {\n      expect(response.body.status).toBe(407);\n      expect(response.body.error).toContain('authentication failed!');\n    }));\n\n  it('should raise error for unauthorized cases without token', () => request(app)\n    .get('/api/v1/trips')\n    .set('Accept', 'application/json')\n    .expect(407)\n    .then((response) => {\n      expect(response.body.status).toBe(407);\n      expect(response.body.error).toContain('Cannot authenticate user');\n    }));\n});\n"]}
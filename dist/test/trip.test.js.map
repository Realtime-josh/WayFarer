{"version":3,"sources":["../../server/test/trip.test.js"],"names":["describe","it","app","post","send","busId","origin","destination","tripDate","tripTime","fare","set","expect","then","response","body","status","toBe","data","toContain","toBeTruthy","error"],"mappings":"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","file":"trip.test.js","sourcesContent":["import expect from 'expect';\nimport request from 'supertest';\nimport app from '../app';\nimport { createTrip } from '../crud/db';\n\ndescribe('POST /trips', () => {\n  it('should create trip for signed in admin', () => request(app)\n    .post('/api/v1/trip/createtrip')\n    .send({\n      busId: 4,\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(201)\n    .then((response) => {\n      expect(response.body.status).toBe(201);\n      expect(response.body.data).toContain('trip created');\n      expect(response.body.data).toBeTruthy();\n    }));\n\n  it('should flag error for wrong input details', () => request(app)\n    .post('/api/v1/trip/createtrip')\n    .send({\n      busId: '4',\n      origin: 'Mangala%^$#',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(403)\n    .then((response) => {\n      expect(response.body.status).toBe(403);\n      expect(response.body.error).toContain('Ensure all fields are filled in correctly');\n    }));\n\n  it('should flag error for missing input details', () => request(app)\n    .post('/api/v1/trip/createtrip')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYzLCJmaXJzdE5hbWUiOiJKYWNvYiIsImxhc3ROYW1lIjoiTW9vcmUiLCJlbWFpbCI6ImphY29ubW9vcmVAd2F5ZmFyZXJhZG1pbi5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE1NjIxODc4Njd9.QxKWLYmLbt_YzkuOcnm6znMgx6iuFFHwFwGn715DPNc')\n    .expect(403)\n    .then((response) => {\n      expect(response.body.status).toBe(403);\n      expect(response.body.error).toContain('Missing input details');\n    }));\n\n  it('should ensure non-admin does not create a trip', () => request(app)\n    .post('/api/v1/trip/createtrip')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjg1LCJmaXJzdE5hbWUiOiJKb3NodWEiLCJsYXN0TmFtZSI6IkZyYW5rc29uIiwiZW1haWwiOiJqb3NodWFmcmFua3NvbkBnbWFpbC5jb20iLCJpc0FkbWluIjpmYWxzZSwiaWF0IjoxNTYyMTg5OTg4fQ.pS7g3oVP_4hVL1ugeJZpr5JoBqDRACZJlS7uG9cFFGw')\n    .expect(401)\n    .then((response) => {\n      expect(response.body.status).toBe(401);\n      expect(response.body.error).toContain('Unauthorized user!');\n    }));\n\n  it('should raise error for wrongly authenticated user', () => request(app)\n    .post('/api/v1/trip/createtrip')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Bearer w')\n    .expect(407)\n    .then((response) => {\n      expect(response.body.status).toBe(407);\n      expect(response.body.error).toContain('authentication failed!');\n    }));\n\n  it('should raise error for non-authenticated user', () => request(app)\n    .post('/api/v1/trip/createtrip')\n    .send({\n      busId: '4',\n      origin: 'Mangala',\n      destination: 'Seoul',\n      tripDate: '12/07/2019',\n      tripTime: '12:30',\n      fare: '100000',\n    })\n    .set('Accept', 'application/json')\n    .expect(407)\n    .then((response) => {\n      expect(response.body.status).toBe(407);\n      expect(response.body.error).toContain('Cannot authenticate user');\n    }));\n});\n"]}